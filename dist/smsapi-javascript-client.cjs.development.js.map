{"version":3,"file":"smsapi-javascript-client.cjs.development.js","sources":["../src/modules/baseModule/index.ts","../src/modules/hlr/index.ts","../src/modules/profile/index.ts","../src/modules/sendernames/index.ts","../src/modules/subusers/index.ts","../src/modules/templates/index.ts","../src/smsapi/httpClient/extractDataFromResponse/index.ts","../src/smsapi/index.ts","../src/smsapi/com.ts","../src/smsapi/pl.ts"],"sourcesContent":["import { AxiosInstance } from 'axios';\n\nexport class BaseModule {\n  protected httpClient: AxiosInstance;\n\n  constructor(httpClient: AxiosInstance) {\n    this.httpClient = httpClient;\n  }\n}\n","import { BaseModule } from '../baseModule';\n\nimport { HlrCheckResponse } from './types/HlrCheckResponse';\n\nexport class Hlr extends BaseModule {\n  async check(\n    numbers: string[],\n    idx?: string\n  ): Promise<HlrCheckResponse | HlrCheckResponse[]> {\n    return await this.httpClient.get<\n      HlrCheckResponse | HlrCheckResponse[],\n      HlrCheckResponse | HlrCheckResponse[]\n    >('/hlr.do', {\n      params: {\n        format: 'json',\n        idx,\n        number: numbers.join(','),\n      },\n    });\n  }\n}\n","import { BaseModule } from '../baseModule';\n\nimport { ProfileResponse } from './types/ProfileResponse';\n\nexport class Profile extends BaseModule {\n  async get(): Promise<ProfileResponse> {\n    return await this.httpClient.get<ProfileResponse, ProfileResponse>(\n      '/profile'\n    );\n  }\n}\n","import { BaseModule } from '../baseModule';\nimport { ApiCollection } from '../../types';\n\nimport { Sendername } from './types/Sendername';\nimport { SendernameStatus } from './types/SendernameStatus';\n\ninterface ApiSendername {\n  createdAt: string;\n  isDefault: boolean;\n  sender: string;\n  status: SendernameStatus;\n}\n\nexport class Sendernames extends BaseModule {\n  async get(): Promise<ApiCollection<Sendername>> {\n    const data = await this.httpClient.get<\n      ApiCollection<ApiSendername>,\n      ApiCollection<ApiSendername>\n    >('/sms/sendernames');\n\n    return {\n      ...data,\n      collection: data.collection.map(this.formatSendernameDates),\n    };\n  }\n\n  async getBySender(sender: string): Promise<Sendername> {\n    const data = await this.httpClient.get<ApiSendername, ApiSendername>(\n      `/sms/sendernames/${sender}`\n    );\n\n    return this.formatSendernameDates(data);\n  }\n\n  async create(sender: string): Promise<Sendername> {\n    const data = await this.httpClient.post<ApiSendername, ApiSendername>(\n      '/sms/sendernames',\n      {\n        sender,\n      }\n    );\n\n    return this.formatSendernameDates(data);\n  }\n\n  async makeDefault(sender: string): Promise<void> {\n    await this.httpClient.post<void, void>(\n      `/sms/sendernames/${sender}/commands/make_default`\n    );\n  }\n\n  async remove(sender: string): Promise<void> {\n    await this.httpClient.delete<void, void>(`/sms/sendernames/${sender}`);\n  }\n\n  private formatSendernameDates(sendername: ApiSendername): Sendername {\n    return {\n      ...sendername,\n      createdAt: new Date(sendername.createdAt),\n    };\n  }\n}\n","import { BaseModule } from '../baseModule';\nimport { ApiCollection, NewSubuser } from '../../types';\n\nimport { Subuser } from './types/Subuser';\nimport { UpdateSubuser } from './types/UpdateSubuser';\n\nexport interface ApiSubuser\n  extends Omit<Omit<Subuser, 'credentials'>, 'points'> {\n  credentials: {\n    username: string;\n    password: string;\n    api_password: string;\n  };\n  points: {\n    from_account: number;\n    per_month: number;\n  };\n}\n\nexport class Subusers extends BaseModule {\n  async get(): Promise<ApiCollection<Subuser>> {\n    return await this.httpClient.get<\n      ApiCollection<Subuser>,\n      ApiCollection<Subuser>\n    >('/subusers');\n  }\n\n  async getById(subuserId: string): Promise<Subuser> {\n    return await this.httpClient.get<Subuser, Subuser>(\n      `/subusers/${subuserId}`\n    );\n  }\n\n  async create(newSubuser: NewSubuser): Promise<Subuser> {\n    const { credentials, points } = newSubuser;\n\n    return await this.httpClient.post<Subuser, Subuser>('/subusers', {\n      ...newSubuser,\n      credentials: {\n        username: credentials.username,\n        password: credentials.password,\n        api_password: credentials.apiPassword,\n      },\n      points: points\n        ? {\n            from_account: points.fromAccount,\n            per_month: points.perMonth,\n          }\n        : undefined,\n    });\n  }\n\n  async update(\n    subuserId: string,\n    updateSubuser: Partial<UpdateSubuser>\n  ): Promise<Subuser> {\n    const { credentials, points } = updateSubuser;\n\n    return await this.httpClient.put<Subuser, Subuser>(\n      `/subusers/${subuserId}`,\n      {\n        ...updateSubuser,\n        credentials:\n          credentials && (credentials.password || credentials.apiPassword)\n            ? {\n                password: credentials.password,\n                api_password: credentials.apiPassword,\n              }\n            : undefined,\n        points:\n          points && (points.fromAccount || points.perMonth)\n            ? {\n                from_account: points.fromAccount,\n                per_month: points.perMonth,\n              }\n            : undefined,\n      }\n    );\n  }\n\n  async remove(subuserId: string): Promise<void> {\n    await this.httpClient.delete<void, void>(`/subusers/${subuserId}`);\n  }\n}\n","import { BaseModule } from '../baseModule';\nimport { ApiCollection } from '../../types';\n\nimport { NewTemplate } from './types/NewTemplate';\nimport { Template } from './types/Template';\n\nexport class Templates extends BaseModule {\n  async get(): Promise<ApiCollection<Template>> {\n    return await this.httpClient.get<\n      ApiCollection<Template>,\n      ApiCollection<Template>\n    >('/sms/templates');\n  }\n\n  async getById(templateId: string): Promise<Template> {\n    return await this.httpClient.get<Template, Template>(\n      `/sms/templates/${templateId}`\n    );\n  }\n\n  async create(newTemplate: NewTemplate): Promise<Template> {\n    return await this.httpClient.post<Template, Template>(\n      '/sms/templates',\n      newTemplate\n    );\n  }\n\n  async update(\n    templateId: string,\n    newTemplate: Partial<NewTemplate>\n  ): Promise<Template> {\n    return await this.httpClient.put<Template, Template>(\n      `/sms/templates/${templateId}`,\n      newTemplate\n    );\n  }\n\n  async remove(templateId: string): Promise<void> {\n    await this.httpClient.delete<void, void>(`/sms/templates/${templateId}`);\n  }\n}\n","import { AxiosResponse } from 'axios';\nimport camelCase from 'lodash/camelCase';\nimport forEach from 'lodash/forEach';\nimport isArray from 'lodash/isArray';\nimport isObject from 'lodash/isObject';\nimport mapKeys from 'lodash/mapKeys';\n\nconst formatKeys = (\n  object: Record<string, unknown>\n): Record<string, unknown> => {\n  return mapKeys(object, (_, key) => {\n    return camelCase(key);\n  });\n};\n\nconst formatResponse = (object: Record<string, unknown>) => {\n  const newResponse = formatKeys(object);\n\n  forEach(newResponse, (value, key) => {\n    if (isObject(value)) {\n      newResponse[key] = formatKeys(value as Record<string, unknown>);\n    }\n  });\n\n  return newResponse;\n};\n\nexport const extractDataFromResponse = (response: AxiosResponse) => {\n  const { data } = response;\n\n  if (!data) {\n    return data;\n  }\n\n  if (isArray(data)) {\n    return data.map(formatResponse);\n  }\n\n  if (data.collection && data.size) {\n    return {\n      ...data,\n      collection: data.collection.map(formatResponse),\n    };\n  }\n\n  return formatResponse(data);\n};\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport axios, { AxiosInstance } from 'axios';\n// @ts-ignore TS7016\nimport adapter from 'axios/lib/adapters/http';\n\nimport { Hlr } from '../modules/hlr';\nimport { Profile } from '../modules/profile';\nimport { Sendernames } from '../modules/sendernames';\nimport { Subusers } from '../modules/subusers';\nimport { Templates } from '../modules/templates';\n// @ts-ignore TS6059\nimport { version } from '../../package.json';\n\nimport { extractDataFromResponse } from './httpClient/extractDataFromResponse';\n/* eslint-enable @typescript-eslint/ban-ts-comment */\n\nexport class SMSAPI {\n  private apiUrl: string;\n  private accessToken: string;\n\n  private httpClient: AxiosInstance;\n\n  public hlr: Hlr;\n  public profile: Profile;\n  public sendernames: Sendernames;\n  public subusers: Subusers;\n  public templates: Templates;\n\n  constructor(accessToken: string, apiUrl: string) {\n    this.accessToken = accessToken;\n    this.apiUrl = apiUrl;\n\n    this.httpClient = this.setHttpClient();\n\n    this.hlr = new Hlr(this.httpClient);\n    this.profile = new Profile(this.httpClient);\n    this.sendernames = new Sendernames(this.httpClient);\n    this.subusers = new Subusers(this.httpClient);\n    this.templates = new Templates(this.httpClient);\n  }\n\n  private getUserAgent(): string {\n    return `smsapi/js-client:${version}`;\n  }\n\n  private setHttpClient(): AxiosInstance {\n    const httpClient = axios.create({\n      adapter,\n      baseURL: this.apiUrl,\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${this.accessToken}`,\n        'User-Agent': this.getUserAgent(),\n      },\n    });\n\n    httpClient.interceptors.response.use(extractDataFromResponse);\n\n    return httpClient;\n  }\n}\n","import { SMSAPI } from '.';\n\nexport class SMSAPIcom extends SMSAPI {\n  constructor(accessToken: string) {\n    const API_URL = 'https://api.smsapi.com';\n\n    super(accessToken, API_URL);\n  }\n}\n","import { SMSAPI } from '.';\n\nexport class SMSAPIpl extends SMSAPI {\n  constructor(accessToken: string) {\n    const API_URL = 'https://api.smsapi.pl';\n\n    super(accessToken, API_URL);\n  }\n}\n"],"names":["BaseModule","httpClient","Hlr","check","numbers","idx","get","params","format","number","join","Profile","Sendernames","data","collection","map","formatSendernameDates","getBySender","sender","create","post","makeDefault","remove","sendername","createdAt","Date","Subusers","getById","subuserId","newSubuser","credentials","points","username","password","api_password","apiPassword","from_account","fromAccount","per_month","perMonth","undefined","update","updateSubuser","put","Templates","templateId","newTemplate","formatKeys","object","mapKeys","_","key","camelCase","formatResponse","newResponse","forEach","value","isObject","extractDataFromResponse","response","isArray","size","SMSAPI","accessToken","apiUrl","setHttpClient","hlr","profile","sendernames","subusers","templates","getUserAgent","version","axios","adapter","baseURL","headers","Accept","Authorization","interceptors","use","SMSAPIcom","API_URL","SMSAPIpl"],"mappings":"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"}