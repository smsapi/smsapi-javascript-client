{"version":3,"file":"smsapi-javascript-client.esm.js","sources":["../src/modules/baseModule/index.ts","../src/modules/hlr/index.ts","../src/modules/profile/index.ts","../src/modules/sendernames/helpers/dateFormatter/index.ts","../src/modules/sendernames/index.ts","../src/modules/templates/index.ts","../src/smsapi/httpClient/extractDataFromResponse/index.ts","../src/smsapi/index.ts","../src/smsapi/com.ts","../src/smsapi/pl.ts"],"sourcesContent":["import { AxiosInstance } from 'axios';\n\nexport class BaseModule {\n  protected httpClient: AxiosInstance;\n\n  constructor(httpClient: AxiosInstance) {\n    this.httpClient = httpClient;\n  }\n}\n","import { BaseModule } from '../baseModule';\n\nimport { HlrCheckResponse } from './types/HlrCheckResponse';\n\nexport class Hlr extends BaseModule {\n  async check(\n    numbers: string[],\n    idx?: string\n  ): Promise<HlrCheckResponse | HlrCheckResponse[]> {\n    return await this.httpClient.get<\n      any,\n      HlrCheckResponse | HlrCheckResponse[]\n    >('/hlr.do', {\n      params: {\n        format: 'json',\n        idx,\n        number: numbers.join(','),\n      },\n    });\n  }\n}\n","import { BaseModule } from '../baseModule';\n\nimport { ProfileResponse } from './types/ProfileResponse';\n\nexport class Profile extends BaseModule {\n  async get(): Promise<ProfileResponse> {\n    return await this.httpClient.get<any, ProfileResponse>('/profile');\n  }\n}\n","import { Sendername } from '../../types/Sendername';\nimport { ApiSendername } from '../../';\n\nexport const dateFormatter = (sendername: ApiSendername): Sendername => ({\n  ...sendername,\n  createdAt: new Date(sendername.createdAt),\n});\n","import { BaseModule } from '../baseModule';\nimport { ApiCollection } from '../../types';\n\nimport { Sendername } from './types/Sendername';\nimport { SendernameStatus } from './types/SendernameStatus';\nimport { dateFormatter } from './helpers/dateFormatter';\n\nexport interface ApiSendername {\n  createdAt: string;\n  isDefault: boolean;\n  sender: string;\n  status: SendernameStatus;\n}\n\nexport class Sendernames extends BaseModule {\n  async get(): Promise<ApiCollection<Sendername>> {\n    const data = await this.httpClient.get<any, ApiCollection<ApiSendername>>(\n      '/sms/sendernames'\n    );\n\n    return {\n      ...data,\n      collection: data.collection.map(dateFormatter),\n    };\n  }\n\n  async getBySender(sender: string): Promise<Sendername> {\n    const data = await this.httpClient.get<any, ApiSendername>(\n      `/sms/sendernames/${sender}`\n    );\n\n    return dateFormatter(data);\n  }\n\n  async create(sender: string): Promise<Sendername> {\n    const data = await this.httpClient.post<any, ApiSendername>(\n      '/sms/sendernames',\n      {\n        sender,\n      }\n    );\n\n    return dateFormatter(data);\n  }\n\n  async makeDefault(sender: string): Promise<void> {\n    await this.httpClient.post<any, void>(\n      `/sms/sendernames/${sender}/commands/make_default`\n    );\n  }\n\n  async remove(sender: string): Promise<void> {\n    await this.httpClient.delete<any, void>(`/sms/sendernames/${sender}`);\n  }\n}\n","import { BaseModule } from '../baseModule';\nimport { ApiCollection } from '../../types';\n\nimport { NewTemplate } from './types/NewTemplate';\nimport { Template } from './types/Template';\n\nexport class Templates extends BaseModule {\n  async get(): Promise<ApiCollection<Template>> {\n    return await this.httpClient.get<any, ApiCollection<Template>>(\n      '/sms/templates'\n    );\n  }\n\n  async getById(templateId: string): Promise<Template> {\n    return await this.httpClient.get<any, Template>(\n      `/sms/templates/${templateId}`\n    );\n  }\n\n  async create(newTemplate: NewTemplate): Promise<Template> {\n    return await this.httpClient.post<any, Template>(\n      '/sms/templates',\n      newTemplate\n    );\n  }\n\n  async update(\n    templateId: string,\n    newTemplate: Partial<NewTemplate>\n  ): Promise<Template> {\n    return await this.httpClient.put<any, Template>(\n      `/sms/templates/${templateId}`,\n      newTemplate\n    );\n  }\n\n  async remove(templateId: string): Promise<void> {\n    await this.httpClient.delete<any, void>(`/sms/templates/${templateId}`);\n  }\n}\n","import { AxiosResponse } from 'axios';\nimport camelCase from 'lodash/camelCase';\nimport isArray from 'lodash/isArray';\nimport mapKeys from 'lodash/mapKeys';\n\nconst formatResponse = (object: any) => {\n  return mapKeys(object, (_, key) => {\n    return camelCase(key);\n  });\n};\n\nexport const extractDataFromResponse = (response: AxiosResponse) => {\n  const { data } = response;\n\n  if (!data) {\n    return data;\n  }\n\n  if (isArray(data)) {\n    return data.map(formatResponse);\n  }\n\n  if (data.collection && data.size) {\n    return {\n      ...data,\n      collection: data.collection.map(formatResponse),\n    };\n  }\n\n  return formatResponse(data);\n};\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport axios, { AxiosInstance } from 'axios';\n// @ts-ignore TS7016\nimport adapter from 'axios/lib/adapters/http';\n\nimport { Hlr } from '../modules/hlr';\nimport { Profile } from '../modules/profile';\nimport { Sendernames } from '../modules/sendernames';\nimport { Templates } from '../modules/templates';\n// @ts-ignore TS6059\nimport { version } from '../../package.json';\n\nimport { extractDataFromResponse } from './httpClient/extractDataFromResponse';\n/* eslint-enable @typescript-eslint/ban-ts-comment */\n\nexport class SMSAPI {\n  private apiUrl: string;\n  private accessToken: string;\n\n  private httpClient: AxiosInstance;\n\n  public hlr: Hlr;\n  public profile: Profile;\n  public sendernames: Sendernames;\n  public templates: Templates;\n\n  constructor(accessToken: string, apiUrl: string) {\n    this.accessToken = accessToken;\n    this.apiUrl = apiUrl;\n\n    this.httpClient = this.setHttpClient();\n\n    this.hlr = new Hlr(this.httpClient);\n    this.profile = new Profile(this.httpClient);\n    this.sendernames = new Sendernames(this.httpClient);\n    this.templates = new Templates(this.httpClient);\n  }\n\n  private getUserAgent(): string {\n    return `smsapi/js-client:${version}`;\n  }\n\n  private setHttpClient(): AxiosInstance {\n    const httpClient = axios.create({\n      adapter,\n      baseURL: this.apiUrl,\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${this.accessToken}`,\n        'User-Agent': this.getUserAgent(),\n      },\n    });\n\n    httpClient.interceptors.response.use(extractDataFromResponse);\n\n    return httpClient;\n  }\n}\n","import { SMSAPI } from '.';\n\nexport class SMSAPIcom extends SMSAPI {\n  constructor(accessToken: string) {\n    const API_URL = 'https://api.smsapi.com';\n\n    super(accessToken, API_URL);\n  }\n}\n","import { SMSAPI } from '.';\n\nexport class SMSAPIpl extends SMSAPI {\n  constructor(accessToken: string) {\n    const API_URL = 'https://api.smsapi.pl';\n\n    super(accessToken, API_URL);\n  }\n}\n"],"names":["BaseModule","httpClient","Hlr","check","numbers","idx","get","params","format","number","join","Profile","dateFormatter","sendername","createdAt","Date","Sendernames","data","collection","map","getBySender","sender","create","post","makeDefault","remove","Templates","getById","templateId","newTemplate","update","put","formatResponse","object","mapKeys","_","key","camelCase","extractDataFromResponse","response","isArray","size","SMSAPI","accessToken","apiUrl","setHttpClient","hlr","profile","sendernames","templates","getUserAgent","version","axios","adapter","baseURL","headers","Accept","Authorization","interceptors","use","SMSAPIcom","API_URL","SMSAPIpl"],"mappings":"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"}